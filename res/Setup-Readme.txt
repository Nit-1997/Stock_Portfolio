Stock-App : Set-up ReadmeFolder Structure Required to run the JAR    assignment4.zip :  unzip it.    assignment         |_ assignment.jar         |_ testingArtifcats (contains dumps required to run tests)         |_ stock              |_ stock_list.csv ( contains list of stock symbols supported by the application)    After the jar is running , the Program creates 2 more directories in Runtime :-    - portfolios :- This stores all the newly created portfolios / if using manual files ,                    create this repo manually then add those csv files in it.    - stock_data :- This stores the historic API data dump for the stock to be addded dynamically into a csv file

How To Run Program* Unzip the submission file* You should see the stock folder with stock_list.csv file containing all the stock’s ticker symbol we support.* You should also see a folder testingArtifacts which contains files for testing purpose.* In cmd/terminal enter java -jar assignment4.jar* make sure you maintain the folder structure as mentioned above.How to Run Tests* In order to run the tests we require testingArtifacts folder at the root level to dump all the testing data.* You can go to the test and then run all tests and that should trigger the Junit for all the tests.

Getting Started* create portfolio with 2/3 different stocks using CLI.*    - In the welcome menu press 1 to Add new Portfolio*    - Enter the name of the Portfolio you want to create e.g tech*          - If the portfolio with this name already exists you will get a prompt to enter other name or press*            0 to go back to previous menu*          - If you enter a new portfolio name it will display all available ticker symbols for the stocks*    - Enter the valid ticker symbol or press 0 to go back to main menu*          - If you enter an invalid ticker symbol , you get a validation prompt and are asked to enter the*            valid ticker symbol or press 0 to go back to main menu.*          - If you enter the correct valid ticker symbol it will ask you to enter number of stocks*            of this type.*    - Enter a valid Integer , if not entered you get a prompt to re-enter or go back to main menu using 0.*    - Once a valid quantity is entered you get a prompt to add more stocks using y/n*    - If you press n your portfolio gets saved and you are redirected to welcome menu.*    - If you press y , you are taken to the same add/remove stock menu.*    - Do this 3 times to add 3 stocks / 2 times to add 2 stocks*    - If you press 2 option in the add/remove/save menu you are asked the number of stocks you want to remove*    - If you press 3 option then your portfolio gets saved to a csv file in the Portfolios directory.* create portfolio with 2/3 different stocks using Files.*     We allow user to create their own Portfolio CSV files and feed it to our system.*     In that case the csv file should look like this :-*     <ticker_symbol,BuyPrice,Quantity,Date>*     eg: NVDA,134.970001,12.0,2022-11-01*    - All the query functionality works as it it.*    - Program validates the file user manually creates and in case the file does not follow the*      constraints of program , it tells user to recreate it or use another portfolio.* How to query :-*           1. In the main menu press 2 to view portfolios*           2. List of portfolios is displayed*           3. Press 1 to get details of the portfolio eg tech*           4. Enter the valid name from the display else you get the validation prompt with option*              go back to previous menu by pressing 0.*           5. Press 1 to get summary*           6. Press 2 to get detailed view of the portfolio.*           7. Press 3 to get current value of the portfolio.*           8. Press 4 to get the portfolio detailed view by date , you are asked to input date*                    - If you enter a valid date you get the detailed view of the portfolio on that date.*                    - If you enter invalid date you get validaiton prompt and are asked to enter correct date.*           9. Press 5 to get the portfolio value by date , you are asked to input date*                    - If you enter a valid date you get the value of the portfolio on that date.*                    - If you enter invalid date you get validaiton prompt and are asked to enter correct date.*           10. Press 6 to return to the list of portfolios*           11. Press 7 to return to main menu.

Program Limitations* Our application only supports data from 1st January 2010.* Our application only supports 20 ticker symbols as specified in the stock_list.csv file namely :-*       NFLX*       GOOG*       NVDA*       META*       AAPL*       AVGO*       CSCO*       INTU*       HON*       TXN*       AMGN*       MSFT*       TMUS*       COST*       TSLA*       CMCSA*       QCOM*       ADBE*       PEP*       AMZN* Our application is dependent on yahoo finance api to fetch historic data.* If the user enters the data on which the stock exchange is closed the buyPrice becomes the last traded priceand buyDate becomes the last traded date* User created .csv files should be created in portfolios directory , if it does not exist create it.* User creted file should comply to this given types :-<string , double , double , valid_date>